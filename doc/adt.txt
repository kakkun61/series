-- App Model

data Account =
    Account
        { id :: Word
        , identifier :: Text
        , name :: Text
        , serieses :: [Series]
        }

data Series
    = Series
        { id :: Word
        , title :: Text
        , articles :: [Article]
        , uri :: Maybe URI
        }
    | AnalyzingSeries
        { id :: Word }

data Article =
    Article
        { id :: Word
        , title :: Text
        , read :: Bool
        , uri :: URI
        , volume :: Word
        }

-- Lazy App Model

data Fetched a
    = NotYet
    | Done a
    
data Account =
    Account
        { id :: Word
        , identifier :: Text
        , name :: Text
        , serieses :: Fetched [Series]
        }

data Series
    = Series
        { id :: Word
        , title :: Text
        , articles :: Fetched [Article]
        , uri :: Maybe URI
        }
    | AnalyzingSeries
        { id :: Word }

data Article =
    Article
        { id :: Word
        , title :: Text
        , read :: Bool
        , uri :: URI
        , volume :: Word
        }

-- DB Model

data Account =
    Account
        { id :: Word
        , identifier :: Text
        , name :: Text
        }

data Series =
    Series
        { id :: Word }

data SeriesContent =
    SeriesContent
        { id :: Word
        , seriesId :: Word
        , title :: Text
        }

data SeriesUri =
    SeriesUri
        { id :: Word
        , seriesId :: Word
        , uri :: URI
        }

data Following =
    Following
        { id :: Word
        , accountId :: Word
        , seriesId :: Word
        }

data Article =
    Article
        { id :: Word
        , title :: Text
        , read :: Bool
        , volume :: Word
        }

data Conataining =
    Conataining
        { id :: Word
        , seriesId :: Word
        , articleId :: Word
        }

-- IO Model
